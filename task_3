"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""

# 1 Сложность: O(n log n)

dict_company_s = {'Pepsi': 3563200.65, 'Apple inc.': 506011000.38,
                  'Microsoft': 21036040.14, 'Facebook': 150600907.63,
                  'ИП_Усы_Лапы_Хвост': 1102504.46, 'Amazon inc.': 1903540.23,
                  'Samsung': 5077755533.28, 'SpaysX': 9013466202.77,
                  'Сбербанк': 6415649776.98, 'Александров inc.': 46280191048.45}                    # O(1)
list_dict_company_s = list(dict_company_s.items())                                                  # O(n)
list_dict_company_s.sort(key=lambda i: i[1])                                                        # O(n log n)
for i in range(3):                                                                                  # O(n)
    result = list_dict_company_s.pop()                                                              # O(1)
    print(result)                                                                                   # O(1)


# 2 Сложность: O(n**2)
sorted_values = sorted(dict_company_s.values())                                                     # O(n Log n)
sorted_dict = {}                                                                                    # O(1)
for i in sorted_values:                                                                             # O(n)
    for k in dict_company_s.keys():                                                                 # O(n)
        if dict_company_s[k] == i:                                                                  # O(1)
            sorted_dict[k] = dict_company_s[k]                                                      # O(1)
            break                                                                                   # O(1)
list_sorted_dict = list(sorted_dict.items())                                                        # O(n)
for i in range(3):                                                                                  # O(n)
    result = list_sorted_dict.pop()                                                                 # O(1)
    print(result)                                                                                   # O(1)

"""
Лучший вариант первый, т.к. у него самая низкая сложность.
Отсутствие вложенного цикла и лишних переборок.
"""