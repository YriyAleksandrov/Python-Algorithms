"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def counting_even_odd(num, even, odd):
    if num == 0:
        print(f'Количество четных цифр {even} и нечетных цифр {odd}.')
    else:
        n = num % 10
        num //= 10
        if (n % 2) != 0:
            odd += 1
        else:
            even += 1
        return counting_even_odd(num, even, odd)


try:
    number = int(input('Введите целое число: '))
    counting_even_odd(number, even=0, odd=0)
except ValueError:
    print('Ошибка. Введено не целое число или ноль.')
